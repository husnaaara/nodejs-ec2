const express = require("express")
const {createProjectToAssignMember,GetAllProjectToAssignMember,deleteProjectToAssignMember,updateProjectToAssignMemberDetails} = require("../controller/AssignProjectToMember_controller")
const router = express.Router()
/**
 * @swagger
 * components:
 *   schemas:
 *     ProjectToAssignMember:
 *       type: object
 *       required:
 *         - AssignProjectId
 *         - ProjectId
 *         - TeamMember
 *         - LeadEmployeeId
 *         - ProjectAdmin
 *         - BeginDate
 *         - EndDate
 *         - ProjectDetails
 *         - Description
 *       properties:
 *         AssignProjectId:
 *           type: integer
 *           description: AssignProjectId
 *         ProjectId:
 *           type: integer
 *           description: ProjectId
 *         TeamMember:
 *           type: integer
 *           description: TeamMember
 *         LeadEmployeeId:
 *           type: string
 *           description: LeadEmployeeId
 *         ProjectAdmin:
 *           type: string
 *           description: ProjectAdmin
 *         BeginDate:
 *           type: string
 *           description: BeginDate
 *         EndDate:
 *           type: string
 *           description: EndDate
 *         ProjectDetails:
 *           type: string
 *           description: ProjectDetails
 *         Description:
 *           type: string
 *           description: Description
 *       example:
 *           AssignProjectId: AutoGenerated
 *           ProjectId: 1234
 *           TeamMember: ABC,XYZ
 *           LeadEmployeeId: EmployeeId
 *           ProjectAdmin: Admin
 *           BeginDate: 01-06-2022
 *           EndDate :  01-10-2022
 *           ProjectDetails: ASDFREWQ
 *           Description : LKJHUIOP
 *        
 *
 */

/**
 * @swagger
 * /api/v1/GetAllProjectToAssignMember:
 *   get:
 *     summary: get all ProjectToAssignMember
 *     tags: [ProjectToAssignMember]
 *     responses:
 *       200:
 *         description: get All ProjectToAssignMember
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               items:
 *                 $ref: '#/components/schemas/ProjectToAssignMember'
 */
router.route("/GetAllProjectToAssignMember").get(GetAllProjectToAssignMember)
/**
 * @swagger
 * /api/v1/createProjectToAssignMember:
 *   post:
 *     summary: create a new ProjectToAssignMember
 *     tags: [ProjectToAssignMember]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/ProjectToAssignMember'
 *     responses:
 *       200:
 *         description: ProjectToAssignMember successfull
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/ProjectToAssignMember'
 *       500:
 *         description: Some server error
 */
 router.route("/createProjectToAssignMember").post(createProjectToAssignMember)
 /**
 * @swagger
 * /api/v1/updateProjectToAssignMemberDetails:
 *   post:
 *     summary: update ProjectToAssignMember Details
 *     tags: [ProjectToAssignMember]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/ProjectToAssignMember'
 *     responses:
 *       200:
 *         description: ProjectToAssignMember update successfull
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/ProjectToAssignMember'
 *       500:
 *         description: Some server error
 */
  router.route("/updateProjectToAssignMemberDetails").post(updateProjectToAssignMemberDetails)

  /**
 * @swagger
 * /api/v1/deleteProjectToAssignMember/{AssignProjectId}:
 *   delete:
 *     summary: Delete an ProjectToAssignMember
 *     tags: [ProjectToAssignMember]
 *     parameters:
 *         - in: path
 *           name: AssignProjectId
 *           required: true
 *           description: AssignProjectId is required
 *           schema:
 *              type: string
 *     responses:
 *       200:
 *         description: ProjectToAssignMember delete successfully
 *   
 */
   router.route("/deleteProjectToAssignMember/:AssignProjectId").delete(deleteProjectToAssignMember)

module.exports = router

